{"version":3,"sources":["imgs/slide01.png","imgs/slide02.png","imgs/slide03.png","imgs/snake.png","imgs/fifteenpuzzle.png","imgs/reacteroids.png","SignIn.js","SignUp.js","Scores.js","UserAccount.js","Comment.jsx","Games/SnakeGame/SnakeGame.js","Games/Reacteroids-master/src/helpers.js","Games/Reacteroids-master/src/Bullet.js","Games/Reacteroids-master/src/Particle.js","Games/Reacteroids-master/src/Ship.js","Games/Reacteroids-master/src/Asteroid.js","Games/Reacteroids-master/src/Reacteroids.js","Games/FifteenPuzzle/Fifteen.js","Homepage.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SignIn","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","email","password","username","errorMessage","error","inherits","createClass","key","value","event","val","target","change","name","setState","_this2","react_default","a","createElement","className","onChange","handleChange","type","onClick","handleSignIn","react_router_dom","to","Component","SignUp","handleSignUp","Scores","scoreData","game","snapshot","returnArr","forEach","childSnapshot","item","push","unshift","_this3","htmlFor","aria-labelledby","changeGame","Scores_Charts","snapshotToArray","Charts","_this4","user","_this5","ref","firebase","database","auth","currentUser","displayName","orderByChild","on","dat","array","_this6","d","fill","data","stateData","_this7","getData","obj","rank","length","i","_this8","userScores","userTopScore","getUserTopScore","topTen","amount","names","includes","pushData","radialData","d3","rollup","v","score","entries","changeColor","map","id","es6","width","height","innerRadius","outerRadius","startAngle","endAngle","content","Scores_CustomTooltip","minAngle","background","clockWise","dataKey","CustomTooltip","scoreType","object","label","Math","round","UserAccount","photoURL","updateEmail","bind","assertThisInitialized","updatePassword","url","prof","updateProfile","then","window","location","reload","catch","current","console","log","signoff","sendEmailVerification","pw","newPassword","delete","isLoggedOut","placeholder","confirm","deleteAcc","CommentSection","comments","newComment","requestRef","comment","text","time","ServerValue","TIMESTAMP","linkPath","gameTitle","charAt","toUpperCase","slice","Comment_Comments","e","updateComment","addComment","Comments","keys","date","Date","toDateString","SnakeGame","size","addEventListener","indexOf","keyCode","preventDefault","boardHeight","floor","innerHeight","innerWidth","boardWidth","defaultSpeed","gameOver","isGameStarted","speed","segments","getRandomY","getRandomX","fruitLocation","keypress","updateCurrentGame","clearInterval","intervalId","newIntervalId","setInterval","tick","head","prev","abs","x","random","y","hitBody","oldSegments","newSegment","newSegments","ateFruit","newSpeed","pop","updateScore","hitIt","seg","fruit","SnakeGame_BodySegment","color","boardDims","style","onKeyDown","logKey","tabIndex","BodySegment","divStyle","backgroundColor","top","left","rotatePoint","center","angle","cos","sin","randomNumBetween","min","max","randomNumBetweenExcluding","exMin","exMax","Bullet","args","posDelta","ship","rotation","PI","position","velocity","radius","screen","destroy","context","save","translate","rotate","fillStyle","lineWidth","beginPath","arc","closePath","restore","Particle","lifeSpan","inertia","moveTo","Ship","rotationSpeed","lastShot","create","onDie","particle","dir","up","accelerate","right","space","now","bullet","strokeStyle","lineTo","stroke","Asteroid","addScore","vertices","count","rad","asteroidVertices","asteroid","KEY","Reacteroids","ratio","devicePixelRatio","down","asteroidCount","currentScore","topScore","localStorage","inGame","asteroids","bullets","particles","handleKeys","handleResize","refs","canvas","getContext","startGame","requestAnimationFrame","update","removeEventListener","scale","globalAlpha","fillRect","generateAsteroids","checkCollisionsWith","updateObjects","points","createObject","howMany","group","items","index","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","splice","render","err","return","items1","items2","b","item1","item2","checkCollision","obj1","obj2","vx","vy","sqrt","endgame","message","FifteenPuzzle","xCord","yCord","rows","moves","disabled","won","tile","parseInt","squares","document","querySelectorAll","classList","remove","neighbors","getNeighbors","randPick","click","result","getX","getY","canMove","add","bool","correct","split","toString","contains","checkGame","onMouseOut","unHover","onMouseOver","onHover","moveTile","backgroundPosition","files","reader","FileReader","onload","backgroundImage","concat","readAsDataURL","makeSquares","shuffle","visibility","changePic","Homepage","apply","arguments","Homepage_ControlledCarousel","Homepage_CardList","ControlledCarousel","_React$Component","handleSelect","direction","selectedIndex","_this$state","Carousel","activeIndex","onSelect","Item","alt","src","slide01","slide02","slide03","React","GameCard","_Component2","info","link","img","title","CardList","_Component3","games","reacteroids","snake","fifteenpuzzle","Homepage_GameCard","href","App","handleSignOut","isLoggedIn","currentGame","stopWatchingAuth","onAuthStateChanged","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","gameName","entry","allRef","accountStyles","Helmet","activeStyle","textDecoration","react_router","path","component","routerProps","UserAccount_UserAccount","assign","Reacteroids_Reacteroids","Fifteen_FifteenPuzzle","SnakeGame_SnakeGame_SnakeGame","SignUp_SignUp","Scores_Scores","Comment_CommentSection","SignIn_SignIn","exact","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","src_App_0","getElementById","URL","process","origin","fetch","response","status","headers","get","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.92a3bef9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/slide01.6f3ee2d1.png\";","module.exports = __webpack_public_path__ + \"static/media/slide02.34a14161.png\";","module.exports = __webpack_public_path__ + \"static/media/slide03.d4d5acba.png\";","module.exports = __webpack_public_path__ + \"static/media/snake.5c33e1fd.png\";","module.exports = __webpack_public_path__ + \"static/media/fifteenpuzzle.bdc8e13f.png\";","module.exports = __webpack_public_path__ + \"static/media/reacteroids.abfcdc72.png\";","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\n// Component representing the Sign In page\nexport class SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            username: '',\n            errorMessage: this.props.error\n        };\n    }\n\n    // Handle changes to any input element\n    handleChange(event) {\n        let val = event.target.value;\n        let field = event.target.name;\n        let change = {};\n        change[field] = val;\n        this.setState(change);\n    }\n    \n    render() {\n        return(\n            <div className=\"auth\">\n                <div className=\"form-group col-md-4 mx-auto\">\n                    <label>Email:</label>\n                    <input className=\"form-control\"\n                        name=\"email\"\n                        value={this.state.email}\n                        onChange={(event) => { this.handleChange(event) }}\n                    />\n                </div>\n\n                <div className=\"form-group col-md-4 mx-auto\">\n                    <label>Password:</label>\n                    <input type=\"password\" className=\"form-control\"\n                        name=\"password\"\n                        value={this.state.password}\n                        onChange={(event) => { this.handleChange(event) }}\n                    />\n                </div>\n\n                <div className=\"form-group col-md-4 mx-auto\">\n                    <button className=\"login-buttons btn btn-success mr-2 float-left\" onClick={() => this.props.handleSignIn(this.state.email, this.state.password)}>\n                        Sign In!\n                    </button>\n                    <Link to=\"/signup\" className=\"login-buttons float-right\">Don't have an account?</Link>\n                </div>\n                {this.state.errorMessage &&\n                    <p className=\"alert alert-danger\">{this.state.errorMessage}</p>\n                }\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\n\n// Component representing the Sign Up page\nexport class SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            username: '',\n        };\n    }\n\n    // Handle changes to any input element\n    handleChange(event) {\n        let val = event.target.value;\n        let field = event.target.name;\n        let change = {};\n        change[field] = val;\n        this.setState(change);\n    }\n\n    render() {\n        return(\n            <div className=\"auth\">\n                <div className=\"form-group col-md-4 mx-auto\">\n                    <label>Email:</label>\n                    <input className=\"form-control\"\n                        name=\"email\"\n                        value={this.state.email}\n                        onChange={(event) => { this.handleChange(event) }}\n                    />\n                </div>\n\n                <div className=\"form-group col-md-4 mx-auto\">\n                    <label>Password:</label>\n                    <input type=\"password\" className=\"form-control\"\n                        name=\"password\"\n                        value={this.state.password}\n                        onChange={(event) => { this.handleChange(event) }}\n                    />\n                </div>\n\n                <div className=\"form-group col-md-4 mx-auto\">\n                    <label>Username:</label>\n                    <input className=\"form-control\"\n                        name=\"username\"\n                        value={this.state.username}\n                        onChange={(event) => { this.handleChange(event) }}\n                    />\n                </div>\n\n                <div className=\"form-group col-md-4 mx-auto\">\n                    <button className=\"login-buttons btn btn-primary mr-2 float-left\" onClick={() => this.props.handleSignUp(this.state.email, this.state.password, this.state.username)}>\n                        Sign Up\n                     </button>\n                    <Link to=\"/signin\" className=\"login-buttons float-right\">Already have an account?</Link>\n                </div>\n            </div>\n        )\n    }    \n}","import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport {\n    RadialBarChart, RadialBar, LabelList, Tooltip\n} from 'recharts';\nimport * as d3 from 'd3';\n\n// Component representing the scores page\nexport class Scores extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            scoreData: [],\n            game: \"Snake\"\n        }\n    }\n\n    // Convert snapshot into array for iteration during render\n    snapshotToArray(snapshot) {\n        let returnArr = [];\n        snapshot.forEach(childSnapshot => {\n            let item = childSnapshot.val();\n            item.key = childSnapshot.key;\n            // To get descending scores, need to unshift instead of push to reverse order\n            if (this.state.game === \"FifteenPuzzle\") {\n                returnArr.push(item);\n            } else {\n                returnArr.unshift(item);\n            }\n        });\n        return returnArr;\n    }\n\n    // Changes the game data to be shown\n    changeGame(name) {\n        this.setState({ game: name });\n    }\n\n    render() {\n        return (\n            <div className=\"scores-container\">\n                <div className=\"dropdown\">\n                <label htmlFor=\"dropdown\">Game:</label>\n                    <select className=\"form-control\" aria-labelledby=\"dropdownMenuButton\" onChange={(event) => {\n                        this.changeGame(event.target.value);\n                    }}>\n                        <option value=\"Snake\" className=\"dropdown-item\" >Snake</option>\n                        <option value=\"Reacteroids\" className=\"dropdown-item\">Reacteroids</option>\n                        <option value=\"FifteenPuzzle\" className=\"dropdown-item\">Fifteen Puzzle</option>\n                    </select>\n                </div>\n                <div className=\"charts\">\n                    {this.state.game === \"Snake\" && <Charts name=\"SnakeScores\" snapshotToArray={(snapshot) => this.snapshotToArray(snapshot)} />}\n                    {this.state.game === \"Reacteroids\" && <Charts name=\"ReacteroidsScores\" snapshotToArray={(snapshot) => this.snapshotToArray(snapshot)} />}\n                    {this.state.game === \"FifteenPuzzle\" && <Charts name=\"FifteenPuzzleScores\" snapshotToArray={(snapshot) => this.snapshotToArray(snapshot)} />}\n                </div>\n            </div>\n        )\n    }\n}\n\n\n// Component representing data for Snake game\nclass Charts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            scoreData: [],\n            user: \"\"\n        }\n    }\n    // On mount, pull from the \"scores\" table in the database\n    componentDidMount() {\n        let ref = firebase.database().ref(this.props.name);\n        let name = firebase.auth().currentUser.displayName;\n\n        let scores = ref.orderByChild(\"score\");\n        scores.on('value', (snapshot => {\n            let dat = this.props.snapshotToArray(snapshot);\n            this.setState({ scoreData: dat, user: name });\n        }));\n    }\n\n    //function that takes an array and changes the fill color\n    //of the items in that array (used for radial chart)\n    changeColor(array) {\n        array.forEach((d) => {\n            if (d.key === this.state.user) {\n                d.fill = \"#212529\";\n            } else {\n                d.fill = \"#C0B3A0\";\n            }\n        })\n    }\n\n    //function that takes in an array to iterate over and\n    //a name to filter by, returns an array representing\n    //data for specific user\n    getData(array, name) {\n        let returnArr = [];\n        array.forEach((d) => {\n            if (d.name === name) {\n                returnArr.push(d);\n            }\n        });\n        return returnArr;\n    }\n\n    //function that takes an array to push to, data to filter by,\n    //and stateData to use. \n    pushData(array, data, stateData) {\n        data.forEach((d) => {\n            let arr = this.getData(stateData, d);\n            arr.forEach((d) => {\n                array.push(d);\n            });\n        });\n    }\n\n    //function that takes in a user and data\n    //and returns that users top score for specific game\n    getUserTopScore(user, data) {\n        let obj = [];\n        let rank = data.length;\n        data.forEach((d, i) => {\n            if (d.name === user && rank > i) {\n                obj = d;\n                obj.rank = i + 1;\n                rank = obj.rank;\n            }\n        })\n        return obj;\n    }\n\n    render() {\n        let userScores = this.getData(this.state.scoreData, this.state.user);\n        //gets users top score for this game\n        let userTopScore = this.getUserTopScore(this.state.user, this.state.scoreData);\n        let topTen = []; //top ten scores\n        let amount = 0; //top 10 or less counter\n        let names = []; //names of top 10 players\n        if (this.state.scoreData.length < 10) {\n            amount = this.state.scoreData.length;\n        } else {\n            amount = 10;\n        }\n\n        //stores data for rendering in radial chart and table\n        for (let i = 0; i < amount; i++) {\n            if (this.state.scoreData[i].name !== this.state.user) {\n                if (!names.includes(this.state.scoreData[i].name)) {\n                    //get names of top 10 players\n                    names.push(this.state.scoreData[i].name);\n                }\n            }\n            topTen.push(this.state.scoreData[i]);\n        }\n        //get top 10 player avgs and push them on user average data\n        this.pushData(userScores, names, this.state.scoreData);\n\n        //organizes data to put into recharts RadialBarChart\n        let radialData = d3.nest()\n            .key(function (d) { return d.name; })\n            .rollup(function (v) { return d3.mean(v, function (d) { return d.score; }) })\n            .entries(userScores);\n        this.changeColor(radialData);\n        return (\n            <div className=\"charts-container\">\n                <div className=\"flex-item\">\n                    <table>\n                        <tbody>\n                            <tr>\n                                <th>Rank</th>\n                                <th>Username</th>\n                                <th>Score</th>\n                            </tr>\n                            {//top ten scores\n                                topTen.map((d, i) => {\n                                    if (d.name === this.state.user) {\n                                        return (\n                                            <tr className=\"userTopScore\" key={'item-' + i}>\n                                                <td>{i + 1}</td>\n                                                <td>{Object.entries(d)[0][1]}</td>\n                                                <td>{Object.entries(d)[1][1]}</td>\n                                            </tr>\n                                        );\n                                    } else {\n                                        return (\n                                            <tr key={'item-' + i}>\n                                                <td>{i + 1}</td>\n                                                <td>{Object.entries(d)[0][1]}</td>\n                                                <td>{Object.entries(d)[1][1]}</td>\n                                            </tr>\n                                        );\n                                    }\n                                })\n                            }\n                            { /*Shows user top score if its not in the top 10*/\n                                userTopScore.rank > 10 && \n                                <tr key={\"item-User\"} id=\"userScore\">\n                                    <td>{userTopScore.rank}</td>\n                                    <td>{userTopScore.name}</td>\n                                    <td>{userTopScore.score}</td>\n                                </tr>\n                            }\n                        </tbody>\n                    </table>\n                </div>\n                <div className=\"flex-item\">\n                    <h4 id=\"avg\">Your Average vs. Top Ten Average</h4>\n                    <RadialBarChart width={750} height={750} innerRadius=\"10%\" outerRadius=\"80%\" data={radialData} startAngle={180} endAngle={0}>\n                        <Tooltip content={<CustomTooltip name={this.props.name} data={radialData} />} />\n                        <RadialBar minAngle={15} background clockWise={true} dataKey='value' >\n                            <LabelList dataKey=\"key\" fill=\"#EEE\" />\n                        </RadialBar>\n                    </RadialBarChart>\n                </div>\n            </div>\n        )\n    }\n}\n\n//react component that renders a tooltip when hovering over the radial chart\nclass CustomTooltip extends Component {\n    render() {\n        let scoreType = this.props.name === \"FifteenPuzzleScores\" ? \"move(s)\" : \"points\";\n        let object = this.props.data[this.props.label];\n        if (object) {\n            return (\n                <div className=\"custom-tooltip\">\n                    <p>{\"Average Score: \" + Math.round(object.value) + \" \" + scoreType}</p>\n                    <p>{}</p>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n}","import React, {Component} from 'react';\nimport firebase from 'firebase';\n\n//component representing the user account page\nexport class UserAccount extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            username: '',\n            photoURL: '',\n        };\n        this.updateEmail = this.updateEmail.bind(this);\n        this.updatePassword = this.updatePassword.bind(this);\n    }\n\n    // Handle changes to any input element\n    handleChange(event) {\n        let val = event.target.value;\n        let field = event.target.name;\n        let change = {};\n        change[field] = val;\n        this.setState(change);\n    }\n\n    // Update the name and/or the avatar of the user profile\n    updateProfile(name, url) {\n        let user = firebase.auth().currentUser;\n        let prof = {};\n        if (name || url) {\n            if (name) {\n                prof['displayName'] = name;\n            }\n            if (url) {\n                prof['photoURL'] = url;\n            }\n        }\n        user.updateProfile(prof).then(function() {\n            // Update successful.\n            window.location.reload(false);\n        }).catch(function(error) {\n            // An error happened.\n        });\n    }\n\n    // Update the email of the user\n    updateEmail(email) {\n        var user = firebase.auth().currentUser;\n        let current = this;\n        user.updateEmail(email).then(function() {\n            // Update successful.\n            console.log('email updated successfully');\n            window.location.reload(false);\n        }).catch(function(error) {\n            // An error happened.\n            current.props.signoff();\n        });\n    }\n\n    // Send an email to verify email address to the user\n    sendEmailVerification() {\n        var user = firebase.auth().currentUser;\n\n        user.sendEmailVerification().then(function() {\n            // Email sent.\n        }).catch(function(error) {\n            // An error happened.\n        });\n    }\n\n    // Shouldn't need to encrypt the password in the frontend before sending it to the backend as \n    // far as there is an HTTPS connection\n    updatePassword(pw) {\n        var user = firebase.auth().currentUser;\n        let current = this;\n\n        var newPassword = pw;\n        user.updatePassword(newPassword).then(function() {\n            // Update successful.\n            window.location.reload(false);\n        }).catch(function(error) {\n            // An error happened.\n            current.props.signoff();\n        });\n\n    }\n\n    // Deletes the user account\n    deleteAcc() {\n        var user = firebase.auth().currentUser;\n        user.delete().then(function() {\n        }).catch(function(error) {\n            // An error happened.\n        });\n        // After deleting account, need to set this to false \n        this.props.isLoggedOut();\n    }\n\n    render() {\n        let user = firebase.auth().currentUser;\n\n\n        return (\n            <div>\n                <br />\n                <br />\n                <br />\n                <div className=\"form-group col-md-6 mx-auto mb-4\">\n                    <p>Your current display name: {user.displayName}</p>\n                    <label>Change Name:</label>\n                    <input className=\"form-control\" name=\"username\" onChange={event => this.handleChange(event)} value={this.state.username} />\n\n                    <label>Change Avatar:</label>\n                    <input className=\"form-control\" placeholder=\"Enter a URL...\" name=\"photoURL\" onChange={event => this.handleChange(event)} value={this.state.photoURL} />\n\n                    <button className=\"btn btn-primary\" onClick={() => this.updateProfile(this.state.username, this.state.photoURL)}>Update profile</button>\n                </div>\n                <div className=\"form-group col-md-6 mx-auto mb-4\">\n                    <p>Your current email: {user.email}</p>\n                    <label>Change Email:</label>\n                    <input className=\"form-control\" name=\"email\" onChange={event => this.handleChange(event)} value={this.state.email} />\n\n                    <button className=\"btn btn-primary\" onClick={() => this.updateEmail(this.state.email)}>Update email address</button>\n                </div>\n\n                <div className=\"form-group col-md-6 mx-auto mb-4\">\n                    <label>Change password:</label>\n                    <input className=\"form-control\" type=\"password\" name=\"password\" onChange={event => this.handleChange(event)} value={this.state.password} />\n\n                    <button className=\"btn btn-primary\" onClick={() => this.updatePassword(this.state.password)}>Update password</button>\n                </div>\n\n                <div className=\"form-group mx-auto\">\n                    <button className=\"btn btn-danger float-right\" onClick={() => {if (window.confirm('Are you sure you want to delete your account?')) this.deleteAcc()}}>Delete Account</button>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { HashRouter as Router, Link} from \"react-router-dom\";\nimport firebase from 'firebase';\nimport './index.css';\n\n//class that handles the commment section of each recipe page\nexport class CommentSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comments: [],\n            newComment: \"\"\n        }\n    }\n\n    //gets comments from firebase that reference this recipe specifically\n    componentDidMount() {\n        this.requestRef = firebase.database().ref('comments/' + this.props.game);\n        this.requestRef.on('value', (snapshot) => {\n            let comments = snapshot.val();\n            this.setState({ comments: comments });\n        });\n    }\n\n    //updates state of comment being written \n    updateComment(event) {\n        let val = event.target.value;\n        this.setState({\n            newComment: val\n        });\n    }\n\n    //adds comment to firebase and therefore react app\n    addComment() {\n        let comment = {\n            name: firebase.auth().currentUser.displayName,\n            text: this.state.newComment,\n            time: firebase.database.ServerValue.TIMESTAMP\n        }\n        this.requestRef.push(comment);\n        this.setState({ newComment: \"\" });\n    }\n\n    //renders comments to display\n    render() {\n        let linkPath = '/' + this.props.game;\n        let gameTitle = this.props.game.charAt(0).toUpperCase() + this.props.game.slice(1);\n        //console.log(linkPath);\n        return (\n            <div className=\"game-comments\">\n            <h2>{gameTitle}</h2>\n                <Comments comments={this.state.comments} />\n                <div className=\"form-group\">\n                    <textarea className=\"form-control\"\n                        name=\"username\"\n                        placeholder=\"Write a Comment\"\n                        onChange={(e) => this.updateComment(e)}\n                    />\n                </div>\n                <button id=\"comment\" className=\"btn btn-primary\" onClick={() => this.addComment()}>Comment</button>\n                <Router>\n                    <Link to={linkPath}>\n                    <button className=\"btn btn-info\"> Return to {gameTitle}</button>\n                    </Link>\n                </Router>\n            </div>\n        );\n    }\n}\n\n//class that handles what information needs to be displayed about each comment\nclass Comments extends Component {\n    render() {\n        let comments = this.props.comments;\n        return (\n            <div>\n                {comments && Object.keys(comments).map((d, i) => {\n                    let date = new Date(comments[d].time);\n                    return (\n                        <div key={d + i} className=\"box\">\n                            <h3 className=\"box\">{comments[d].name}</h3>\n                            <h4 className=\"box\">{\"On \" + date.toDateString() + \" Said: \"}</h4>\n                            <p className=\"box\">{comments[d].text}</p>\n                        </div>\n                    );\n                })}\n            </div>\n        )\n    }\n}\n\nexport default CommentSection;","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport './SnakeGame.css';\n\n// Component representing the Snake game\n// NOTE: This was written primarily myself, initially based off my Project 2: Art, and then\n// refactored into a React version. \n// I DID initially look at https://github.com/tomocchino/react-snake/blob/master/build/snake.js\n// to get the idea and initial base structure of creating a React version of Snake, but I ended up \n// moving away from that implementation (as you might notice if you look at the code).\nexport class SnakeGame extends Component {\n    constructor(props){\n        super(props);\n        this.size = 20; // Size of snake and fruit\n\n        // Prevent arrow keys from scrolling around on the page\n        // https://stackoverflow.com/questions/8916620/disable-arrow-key-scrolling-in-users-browser\n        window.addEventListener(\"keydown\", function(e) {\n            // space and arrow keys\n            if([37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n                e.preventDefault();\n            }\n        }, false);\n\n        // Responsive board height BUT requires page to be refreshed to update properly\n        this.boardHeight = Math.floor(window.innerHeight / 1.5)\n        if (window.innerWidth < 768) {\n            this.boardWidth = Math.floor(window.innerWidth);\n        } else {\n            this.boardWidth = Math.floor(window.innerWidth);\n        }\n        // Starting movement speed (lower is faster)\n        this.defaultSpeed = 80;\n\n        // Normalize the width and height to be a multiple of the size\n        while (this.boardWidth % this.size !== 0) {\n            this.boardWidth = this.boardWidth - 1;\n        }\n        while (this.boardHeight % this.size !== 0) {\n            this.boardHeight = this.boardHeight - 1;\n        }\n\n        this.state = {\n            gameOver: false,\n            isGameStarted: false,\n            speed: this.defaultSpeed,\n            segments: [[this.getRandomY(), this.getRandomX()]],\n            fruitLocation: [this.getRandomY(), this.getRandomX()],\n            keypress: '',\n            score: 0\n        };\n    }\n\n    componentDidMount() {\n        this.props.updateCurrentGame('snake');\n    }\n    \n    // Handle key presses\n    logKey(e){\n        if (this.state.keypress && !this.state.gameOver){\n            this.setState({\n                keypress: e.key,\n                isGameStarted: true\n            });\n        } else if (['Enter'].includes(e.key)){\n            clearInterval(this.state.intervalId);\n            let newIntervalId = setInterval(() => {this.tick()}, this.defaultSpeed);\n            this.setState({\n                intervalId: newIntervalId,\n                gameOver: '',\n                speed: this.defaultSpeed,\n                segments: this.state.segments,\n                fruitLocation: this.state.fruitLocation,\n                keypress: e.keypress || 'ArrowDown'\n            });\n        }\n    }\n\n    // Create new snake segment\n    // Current bugs: - holding down a direction and then hitting a wall lets you go through\n    newSegment() {\n        let head = this.state.segments[0];\n        // If the snake has at least 2 segments\n        if (this.state.segments[1]) {\n            // Prevent the snake from going in a direction opposite it is currently traveling\n            // i.e. If the snake is moving up, it should not be able to move down over its body in one press\n            let prev = this.state.segments[1];\n            if (this.state.keypress === 'ArrowUp') {\n                if (head[0] - this.size < 0) {\n                    return [this.boardHeight - this.size, head[1]]\n                }\n                // Check if the snake is NOT currently moving down\n                if (head[0] - prev[0] <= 0 || Math.abs(head[0] - prev[0]) > 200) {\n                    return [head[0] - this.size, head[1]]\n                } else {\n                // Otherwise, keep moving down\n                    return [head[0] + this.size, head[1]]\n                }\n            } else if (this.state.keypress === 'ArrowDown') {\n                if (head[0] + this.size >= this.boardHeight) {\n                    return [0, head[1]]\n                }\n                // Check if the snake is NOT currently moving up\n                if (head[0] - prev[0] >= 0 || Math.abs(head[0] - prev[0]) > 200) {\n                    return [head[0] + this.size, head[1]]\n                // Otherwise, keep moving up\n                } else {\n                    this.setState({keypress:'ArrowUp'});\n                    return [head[0] - this.size, head[1]]\n                }\n            } else if (this.state.keypress === 'ArrowRight') {\n                if (head[1] + this.size >= this.boardWidth) {\n                    return [head[0], 0];\n                }\n                // Check if the snake is NOT currently moving left\n                if (head[1] - prev[1] >= 0 || Math.abs(head[1] - prev[1]) > 200) {\n                    return [head[0], head[1] + this.size]\n                // Otherwise, keep moving left\n                } else {\n                    return [head[0], head[1] - this.size]\n                }\n            } else {\n                if (head[1] - this.size < 0) {\n                    return [head[0], this.boardWidth - this.size]\n                }\n                // Check if the snake is NOT currently moving right\n                if (head[1] - prev[1] <= 0 || Math.abs(head[1] - prev[1]) > 200) {\n                    return [head[0], head[1] - this.size]\n                // Otherwise, keep moving right\n                } else {\n                    return [head[0], head[1] + this.size]\n                }\n            }\n        } else { \n        // Since the snake is just a single segment, it is free to move in any direction\n            if (this.state.keypress === 'ArrowUp') {\n                if (head[0] - this.size < 0) {\n                    return [this.boardHeight - this.size, head[1]]\n                } else {\n                    return [head[0] - this.size, head[1]]\n                }\n            } else if (this.state.keypress === 'ArrowDown') {\n                if (head[0] + this.size >= this.boardHeight) {\n                    return [0, head[1]]\n                } else {\n                    return [head[0] + this.size, head[1]]\n                }\n            } else if (this.state.keypress === 'ArrowRight') {\n                if (head[1] + this.size >= this.boardWidth) {\n                    return [head[0], 0];\n                } else {\n                    return [head[0], head[1] + this.size]\n                }\n            } else {\n                if (head[1] - this.size < 0) {\n                    return [head[0], this.boardWidth - this.size]\n                } else {\n                    return [head[0], head[1] - this.size]\n                }\n            }    \n        }\n    }\n\n    // Get a random X coordinate based on current board width\n    getRandomX(){\n        let x = Math.floor(Math.random() * this.boardWidth);\n        // Normalize the width to be a multiple of the size\n        while (x % this.size !== 0) {\n            x = x - 1;\n        }\n        return x;\n    }\n\n    // Get a random Y coordinate based on current board height\n    getRandomY() {\n        let y = Math.floor(Math.random() * this.boardHeight);\n        // Normalize the height to be a multiple of the size\n        while (y % this.size !== 0) {\n            y = y - 1;\n        }\n        return y;\n    }\n    \n    // Control movement of snake at every interval tick\n    tick(){\n        // First check if the game is over\n        if (this.hitBody()) {\n            this.gameOver();\n        }\n\n        // Update the old segments with the new segment \n        let oldSegments = this.state.segments;\n        oldSegments.unshift(this.newSegment());\n        let newSegments = oldSegments;\n\n        // Next check if snake ate a fruit\n        if (this.ateFruit()) {\n            // Increase speed a little after each fruit get\n            let newSpeed = this.state.speed - 2;\n\n            // The ID value returned by setInterval() is used as the parameter for the clearInterval() method\n            clearInterval(this.state.intervalId);\n            let newIntervalId = setInterval(() => {this.tick()}, newSpeed);\n\n            // Update state to re-render fruit location + new segment, and update speed\n            this.setState({\n                speed: newSpeed,\n                intervalId: newIntervalId,\n                segments: newSegments,\n                fruitLocation: [this.getRandomY(), this.getRandomX()]\n            })\n        // No action being done; just moving around\n        } else {\n            // Remove LAST segment (since we added a segment to the head)\n            newSegments.pop();\n            // Update state to re-render snake, simulating a single block movement\n            this.setState({\n                segments: newSegments\n            })\n        };\n    }\n\n    // Performs necessary tasks when game is over\n    gameOver(){\n        clearInterval(this.state.intervalId); // stop ticking\n        this.setState({\n            gameOver: 'You Lost! Score: ' + (this.state.segments.length - 1),\n            segments: [[this.getRandomY(), this.getRandomX()]],\n            fruitLocation: [this.getRandomY(), this.getRandomX()],\n            score: this.state.segments.length - 1\n        });\n        this.props.updateScore(this.state.score, \"Snake\");\n    }\n\n    // Check if snake hits its own segment\n    hitBody(){\n        let head = this.state.segments[0];\n        let hitIt = false;\n        // Iterate through each segment after the first (head) segment\n        this.state.segments.slice(1).forEach((seg, i)=>{\n            if ((head[1] === seg[1]) && (head[0] === seg[0])) {\n                hitIt = true;\n            }\n        });\n        return hitIt;\n    }\n\n    // Check if the snake ate the fruit\n    ateFruit(){\n        let head = this.state.segments[0];\n        let fruit = this.state.fruitLocation;\n        // Check if x,y location of snake head matches x,y location of fruit\n        return (head[1] === fruit[1]) && (head[0] === fruit[0])\n    }\n\n    render() {\n        // Render every segment of the snake\n        let segments = this.state.segments.map((seg, i) =>\n            <BodySegment key={'segment-' + i} size= {this.size} color= {'green'} location={seg} />\n        );\n\n        let boardDims = {\n            height: this.boardHeight,\n            width: this.boardWidth\n        };\n\n        return (\n            <div className=\"snake-app\" style={boardDims} onKeyDown={(e)=>{this.logKey(e)}} tabIndex='1' aria-labelledby=\"Snake game board\">\n            <h1>Score: {this.state.segments.length - 1}</h1>\n            <p className=\"game-over\">{this.state.gameOver}</p>\n            {/* This BodySegment component represents current fruit on the board */}\n            <BodySegment size={this.size} color={'red'} location={this.state.fruitLocation} />\n            { segments }\n            {!this.state.isGameStarted &&\n                <div>\n                    <p className=\"instructions\">In this version of Snake, the board is <em className=\"instructions\">borderless</em>!</p>\n                    <p className=\"instructions\">Press <strong>ENTER</strong> to start playing! Use the <strong>ARROW</strong> keys to move.</p>\n                    <p className=\"instructions\">Make sure to click anywhere on the board to toggle it active!</p>\n                </div>\n            }\n            {(!this.state.isGameStarted || this.state.gameOver) &&\n                <Link to=\"/comments\">\n                    <button className=\"btn btn-primary\"> Leave a comment...</button>\n                </Link>\n            }\n            </div>\n        );\n    }\n}\n\n// Represents the (additional) body segments of the Snake AND the fruit\nclass BodySegment extends Component {\n    render() {\n        let divStyle = {\n            'backgroundColor': this.props.color,\n            'height': this.props.size,\n            'width': this.props.size,\n            'top': this.props.location[0],\n            'left': this.props.location[1]\n        }\n    \n        return(\n            <div style={divStyle} className=\"body-segment\"></div>\n        )\n    }\n}\n\nexport default SnakeGame;","// From: http://codepen.io/bungu/pen/rawvJe\n\n/**\n * Generates vertices for asteroid polygon with certain count and radius\n * @param  {Number} count   Number of vertices\n * @param  {Number} rad     Maximal radius of polygon\n * @return {Array}        Array of vertices: {x: Number, y: Number}\n */\nexport function asteroidVertices(count, rad) {\n  let p = [];\n  for (let i = 0; i < count; i++) {\n    p[i] = {\n      x: (-Math.sin((360/count)*i*Math.PI/180) + Math.round(Math.random()*2-1)*Math.random()/3)*rad,\n      y: (-Math.cos((360/count)*i*Math.PI/180) + Math.round(Math.random()*2-1)*Math.random()/3)*rad\n    };\n  }\n  return p;\n};\n\n/**\n * Rotate point around center on certain angle\n * @param {Object} p        {x: Number, y: Number}\n * @param {Object} center   {x: Number, y: Number}\n * @param {Number} angle    Angle in radians\n */\nexport function rotatePoint(p, center, angle) {\n  return {\n    x: ((p.x-center.x)*Math.cos(angle) - (p.y-center.y)*Math.sin(angle)) + center.x,\n    y: ((p.x-center.x)*Math.sin(angle) + (p.y-center.y)*Math.cos(angle)) + center.y\n  };\n};\n\n/**\n * Random Number between 2 numbers\n */\nexport function randomNumBetween(min, max) {\n  return Math.random() * (max - min + 1) + min;\n};\n\n/**\n * Random Number between 2 numbers excluding a certain range\n */\nexport function randomNumBetweenExcluding(min, max, exMin, exMax) {\n  let random = randomNumBetween(min, max);\n  while (random > exMin && random < exMax) {\n    random = Math.random() * (max - min + 1) + min;\n  }\n  return random;\n};\n","import { rotatePoint } from './helpers';\n\nexport default class Bullet {\n  constructor(args) {\n    let posDelta = rotatePoint({x:0, y:-20}, {x:0,y:0}, args.ship.rotation * Math.PI / 180);\n    this.position = {\n      x: args.ship.position.x + posDelta.x,\n      y: args.ship.position.y + posDelta.y\n    };\n    this.rotation = args.ship.rotation;\n    this.velocity = {\n      x:posDelta.x / 2,\n      y:posDelta.y / 2\n    };\n    this.radius = 2;\n  }\n\n  destroy(){\n    this.delete = true;\n  }\n\n  render(state){\n    // Move\n    this.position.x += this.velocity.x;\n    this.position.y += this.velocity.y;\n\n    // Delete if it goes out of bounds\n    if ( this.position.x < 0\n      || this.position.y < 0\n      || this.position.x > state.screen.width\n      || this.position.y > state.screen.height ) {\n        this.destroy();\n    }\n\n    // Draw\n    const context = state.context;\n    context.save();\n    context.translate(this.position.x, this.position.y);\n    context.rotate(this.rotation * Math.PI / 180);\n    context.fillStyle = '#FFF';\n    context.lineWidth = 0.5;\n    context.beginPath();\n    context.arc(0, 0, 2, 0, 2 * Math.PI);\n    context.closePath();\n    context.fill();\n    context.restore();\n  }\n}\n","export default class Particle {\n  constructor(args) {\n    this.position = args.position\n    this.velocity = args.velocity\n    this.radius = args.size;\n    this.lifeSpan = args.lifeSpan;\n    this.inertia = 0.98;\n  }\n\n  destroy(){\n    this.delete = true;\n  }\n\n  render(state){\n    // Move\n    this.position.x += this.velocity.x;\n    this.position.y += this.velocity.y;\n    this.velocity.x *= this.inertia;\n    this.velocity.y *= this.inertia;\n\n    // Shrink\n    this.radius -= 0.1;\n    if(this.radius < 0.1) {\n      this.radius = 0.1;\n    }\n    if(this.lifeSpan-- < 0){\n      this.destroy()\n    }\n\n    // Draw\n    const context = state.context;\n    context.save();\n    context.translate(this.position.x, this.position.y);\n    context.fillStyle = '#ffffff';\n    context.lineWidth = 2;\n    context.beginPath();\n    context.moveTo(0, -this.radius);\n    context.arc(0, 0, this.radius, 0, 2 * Math.PI);\n    context.closePath();\n    context.fill();\n    context.restore();\n  }\n}\n","import Bullet from './Bullet';\nimport Particle from './Particle';\nimport { rotatePoint, randomNumBetween } from './helpers';\n\nexport default class Ship {\n  constructor(args) {\n    this.position = args.position\n    this.velocity = {\n      x: 0,\n      y: 0\n    }\n    this.rotation = 0;\n    this.rotationSpeed = 6;\n    this.speed = 0.15;\n    this.inertia = 0.99;\n    this.radius = 20;\n    this.lastShot = 0;\n    this.create = args.create;\n    this.onDie = args.onDie;\n  }\n\n  destroy(){\n    this.delete = true;\n    this.onDie();\n\n    // Explode\n    for (let i = 0; i < 60; i++) {\n      const particle = new Particle({\n        lifeSpan: randomNumBetween(60, 100),\n        size: randomNumBetween(1, 4),\n        position: {\n          x: this.position.x + randomNumBetween(-this.radius/4, this.radius/4),\n          y: this.position.y + randomNumBetween(-this.radius/4, this.radius/4)\n        },\n        velocity: {\n          x: randomNumBetween(-1.5, 1.5),\n          y: randomNumBetween(-1.5, 1.5)\n        }\n      });\n      this.create(particle, 'particles');\n    }\n  }\n\n  rotate(dir){\n    if (dir === 'LEFT') {\n      this.rotation -= this.rotationSpeed;\n    }\n    if (dir === 'RIGHT') {\n      this.rotation += this.rotationSpeed;\n    }\n  }\n\n  accelerate(val){\n    this.velocity.x -= Math.sin(-this.rotation*Math.PI/180) * this.speed;\n    this.velocity.y -= Math.cos(-this.rotation*Math.PI/180) * this.speed;\n\n    // Thruster particles\n    let posDelta = rotatePoint({x:0, y:-10}, {x:0,y:0}, (this.rotation-180) * Math.PI / 180);\n    const particle = new Particle({\n      lifeSpan: randomNumBetween(20, 40),\n      size: randomNumBetween(1, 3),\n      position: {\n        x: this.position.x + posDelta.x + randomNumBetween(-2, 2),\n        y: this.position.y + posDelta.y + randomNumBetween(-2, 2)\n      },\n      velocity: {\n        x: posDelta.x / randomNumBetween(3, 5),\n        y: posDelta.y / randomNumBetween(3, 5)\n      }\n    });\n    this.create(particle, 'particles');\n  }\n\n  render(state){\n    // Controls\n    if(state.keys.up){\n      this.accelerate(1);\n    }\n    if(state.keys.left){\n      this.rotate('LEFT');\n    }\n    if(state.keys.right){\n      this.rotate('RIGHT');\n    }\n    if(state.keys.space && Date.now() - this.lastShot > 300){\n      const bullet = new Bullet({ship: this});\n      this.create(bullet, 'bullets');\n      this.lastShot = Date.now();\n    }\n\n    // Move\n    this.position.x += this.velocity.x;\n    this.position.y += this.velocity.y;\n    this.velocity.x *= this.inertia;\n    this.velocity.y *= this.inertia;\n\n    // Rotation\n    if (this.rotation >= 360) {\n      this.rotation -= 360;\n    }\n    if (this.rotation < 0) {\n      this.rotation += 360;\n    }\n\n    // Screen edges\n    if(this.position.x > state.screen.width) this.position.x = 0;\n    else if(this.position.x < 0) this.position.x = state.screen.width;\n    if(this.position.y > state.screen.height) this.position.y = 0;\n    else if(this.position.y < 0) this.position.y = state.screen.height;\n\n    // Draw\n    const context = state.context;\n    context.save();\n    context.translate(this.position.x, this.position.y);\n    context.rotate(this.rotation * Math.PI / 180);\n    context.strokeStyle = '#ffffff';\n    context.fillStyle = '#000000';\n    context.lineWidth = 2;\n    context.beginPath();\n    context.moveTo(0, -15);\n    context.lineTo(10, 10);\n    context.lineTo(5, 7);\n    context.lineTo(-5, 7);\n    context.lineTo(-10, 10);\n    context.closePath();\n    context.fill();\n    context.stroke();\n    context.restore();\n  }\n}\n","import Particle from './Particle';\nimport { asteroidVertices, randomNumBetween } from './helpers';\n\nexport default class Asteroid {\n  constructor(args) {\n    this.position = args.position\n    this.velocity = {\n      x: randomNumBetween(-1.5, 1.5),\n      y: randomNumBetween(-1.5, 1.5)\n    }\n    this.rotation = 0;\n    this.rotationSpeed = randomNumBetween(-1, 1)\n    this.radius = args.size;\n    this.score = (80/this.radius)*5;\n    this.create = args.create;\n    this.addScore = args.addScore;\n    this.vertices = asteroidVertices(8, args.size)\n  }\n\n  destroy(){\n    this.delete = true;\n    this.addScore(this.score);\n\n    // Explode\n    for (let i = 0; i < this.radius; i++) {\n      const particle = new Particle({\n        lifeSpan: randomNumBetween(60, 100),\n        size: randomNumBetween(1, 3),\n        position: {\n          x: this.position.x + randomNumBetween(-this.radius/4, this.radius/4),\n          y: this.position.y + randomNumBetween(-this.radius/4, this.radius/4)\n        },\n        velocity: {\n          x: randomNumBetween(-1.5, 1.5),\n          y: randomNumBetween(-1.5, 1.5)\n        }\n      });\n      this.create(particle, 'particles');\n    }\n\n    // Break into smaller asteroids\n    if(this.radius > 10){\n      for (let i = 0; i < 2; i++) {\n        let asteroid = new Asteroid({\n\n          size: this.radius/2,\n          position: {\n            x: randomNumBetween(-10, 20)+this.position.x,\n            y: randomNumBetween(-10, 20)+this.position.y\n          },\n          create: this.create.bind(this),\n          addScore: this.addScore.bind(this)\n        });\n        this.create(asteroid, 'asteroids');\n      }\n    }\n  }\n\n  render(state){\n    // Move\n    this.position.x += this.velocity.x;\n    this.position.y += this.velocity.y;\n\n    // Rotation\n    this.rotation += this.rotationSpeed;\n    if (this.rotation >= 360) {\n      this.rotation -= 360;\n    }\n    if (this.rotation < 0) {\n      this.rotation += 360;\n    }\n\n    // Screen edges\n    if(this.position.x > state.screen.width + this.radius) this.position.x = -this.radius;\n    else if(this.position.x < -this.radius) this.position.x = state.screen.width + this.radius;\n    if(this.position.y > state.screen.height + this.radius) this.position.y = -this.radius;\n    else if(this.position.y < -this.radius) this.position.y = state.screen.height + this.radius;\n\n    // Draw\n    const context = state.context;\n    context.save();\n    context.translate(this.position.x, this.position.y);\n    context.rotate(this.rotation * Math.PI / 180);\n    context.strokeStyle = '#FFF';\n    context.lineWidth = 2;\n    context.beginPath();\n    context.moveTo(0, -this.radius);\n    for (let i = 1; i < this.vertices.length; i++) {\n      context.lineTo(this.vertices[i].x, this.vertices[i].y);\n    }\n    context.closePath();\n    context.stroke();\n    context.restore();\n  }\n}\n","import React, { Component } from 'react';\nimport Ship from './Ship';\nimport Asteroid from './Asteroid';\nimport { randomNumBetweenExcluding } from './helpers';\nimport {Link} from 'react-router-dom';\nimport './style.css';\n\n//This game was borrowed from https://github.com/chriz001/Reacteroids\n//Many thanks to chriz001 for creating this amazing game\n//Most of the code from his repository is here unchanged except for minor changes\n//to account for styling within our application and database integration\n\nconst KEY = {\n  LEFT:  37,\n  RIGHT: 39,\n  UP: 38,\n  A: 65,\n  D: 68,\n  W: 87,\n  SPACE: 32\n};\n\nexport class Reacteroids extends Component {\n  constructor() {\n    super();\n    this.state = {\n      screen: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        ratio: window.devicePixelRatio || 1,\n      },\n      context: null,\n      keys : {\n        left  : 0,\n        right : 0,\n        up    : 0,\n        down  : 0,\n        space : 0,\n      },\n      asteroidCount: 3,\n      currentScore: 0,\n      topScore: localStorage['topscore'] || 0,\n      inGame: false\n    }\n    this.ship = [];\n    this.asteroids = [];\n    this.bullets = [];\n    this.particles = [];\n  }\n\n  handleResize(value, e){\n    this.setState({\n      screen : {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        ratio: window.devicePixelRatio || 1,\n      }\n    });\n  }\n\n  handleKeys(value, e){\n    let keys = this.state.keys;\n    if(e.keyCode === KEY.LEFT   || e.keyCode === KEY.A) keys.left  = value;\n    if(e.keyCode === KEY.RIGHT  || e.keyCode === KEY.D) keys.right = value;\n    if(e.keyCode === KEY.UP     || e.keyCode === KEY.W) keys.up    = value;\n    if(e.keyCode === KEY.SPACE) keys.space = value;\n    this.setState({\n      keys : keys\n    });\n  }\n\n  componentDidMount() {\n    this.props.updateCurrentGame('reacteroids');\n    window.addEventListener('keyup',   this.handleKeys.bind(this, false));\n    window.addEventListener('keydown', this.handleKeys.bind(this, true));\n    window.addEventListener('resize',  this.handleResize.bind(this, false));\n\n    const context = this.refs.canvas.getContext('2d');\n    this.setState({ context: context });\n    this.startGame();\n    requestAnimationFrame(() => {this.update()});\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keyup', this.handleKeys);\n    window.removeEventListener('keydown', this.handleKeys);\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  update() {\n    const context = this.state.context;\n\n\n    context.save();\n    context.scale(this.state.screen.ratio, this.state.screen.ratio);\n\n    // Motion trail\n    context.fillStyle = '#000';\n    context.globalAlpha = 0.4;\n    context.fillRect(0, 0, this.state.screen.width, this.state.screen.height);\n    context.globalAlpha = 1;\n\n    // Next set of asteroids\n    if(!this.asteroids.length){\n      let count = this.state.asteroidCount + 1;\n      this.setState({ asteroidCount: count });\n      this.generateAsteroids(count)\n    }\n\n    // Check for colisions\n    this.checkCollisionsWith(this.bullets, this.asteroids);\n    this.checkCollisionsWith(this.ship, this.asteroids);\n\n    // Remove or render\n    this.updateObjects(this.particles, 'particles')\n    this.updateObjects(this.asteroids, 'asteroids')\n    this.updateObjects(this.bullets, 'bullets')\n    this.updateObjects(this.ship, 'ship')\n\n    context.restore();\n\n    // Next frame\n    requestAnimationFrame(() => {this.update()});\n  }\n\n  addScore(points){\n    if(this.state.inGame){\n      this.setState({\n        currentScore: this.state.currentScore + points,\n      });\n    }\n  }\n\n  startGame(){\n    this.setState({\n      inGame: true,\n      currentScore: 0,\n    });\n\n    // Make ship\n    let ship = new Ship({\n      position: {\n        x: this.state.screen.width/2,\n        y: this.state.screen.height/2\n      },\n      create: this.createObject.bind(this),\n      onDie: this.gameOver.bind(this)\n    });\n    this.createObject(ship, 'ship');\n\n    // Make asteroids\n    this.asteroids = [];\n    this.generateAsteroids(this.state.asteroidCount)\n  }\n\n  gameOver(){\n    this.setState({\n      inGame: false,\n    });\n    this.props.updateScore(this.state.currentScore, \"Reacteroids\");\n    // Replace top score\n    if(this.state.currentScore > this.state.topScore){\n      this.setState({\n        topScore: this.state.currentScore,\n      });\n      localStorage['topscore'] = this.state.currentScore;\n    }\n  }\n\n  generateAsteroids(howMany){\n    let ship = this.ship[0];\n    for (let i = 0; i < howMany; i++) {\n      let asteroid = new Asteroid({\n        size: 80,\n        position: {\n          x: randomNumBetweenExcluding(0, this.state.screen.width, ship.position.x-60, ship.position.x+60),\n          y: randomNumBetweenExcluding(0, this.state.screen.height, ship.position.y-60, ship.position.y+60)\n        },\n        create: this.createObject.bind(this),\n        addScore: this.addScore.bind(this)\n      });\n      this.createObject(asteroid, 'asteroids');\n    }\n  }\n\n  createObject(item, group){\n    this[group].push(item);\n  }\n\n  updateObjects(items, group){\n    let index = 0;\n    for (let item of items) {\n      if (item.delete) {\n        this[group].splice(index, 1);\n      }else{\n        items[index].render(this.state);\n      }\n      index++;\n    }\n  }\n\n  checkCollisionsWith(items1, items2) {\n    var a = items1.length - 1;\n    var b;\n    for(a; a > -1; --a){\n      b = items2.length - 1;\n      for(b; b > -1; --b){\n        var item1 = items1[a];\n        var item2 = items2[b];\n        if(this.checkCollision(item1, item2)){\n          item1.destroy();\n          item2.destroy();\n        }\n      }\n    }\n  }\n\n  checkCollision(obj1, obj2){\n    var vx = obj1.position.x - obj2.position.x;\n    var vy = obj1.position.y - obj2.position.y;\n    var length = Math.sqrt(vx * vx + vy * vy);\n    if(length < obj1.radius + obj2.radius){\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    let endgame;\n    let message;\n\n    if (this.state.currentScore <= 0) {\n      message = '0 points... So sad.';\n    } else if (this.state.currentScore >= this.state.topScore){\n      message = 'Top score with ' + this.state.currentScore + ' points. Woo!';\n    } else {\n      message = this.state.currentScore + ' Points though :)'\n    }\n\n    if(!this.state.inGame){\n      endgame = (\n        <div className=\"endgame\">\n          <p className=\"endgame-message\">Game over, man!</p>\n          <p className=\"endgame-message\">{message}</p>\n          <button\n            onClick={ this.startGame.bind(this) }>\n            try again?\n          </button>\n        </div>\n      )\n    }\n\n    return (\n        <div>\n      <div className=\"reacteroids\">\n        { endgame }\n        <span className=\"score current-score\" >Score: {this.state.currentScore}</span>\n        <span className=\"score top-score\" >Top Score: {this.state.topScore}</span>\n        <span className=\"controls\" >\n          Use [A][S][W][D] or [←][↑][↓][→] to MOVE<br/>\n          Use [SPACE] to SHOOT\n        </span>\n        <canvas ref=\"canvas\"\n          width={this.state.screen.width * this.state.screen.ratio}\n          height={this.state.screen.height * this.state.screen.ratio}\n        />\n      </div>\n            <Link className=\"comments-link\" to=\"/comments\">\n                <button className=\"btn btn-primary reacteroids-comments\"> Leave a comment...</button>\n            </Link>\n          </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport './Fifteen.css';\n\n//react component that renders the fifteen puzzle game\nexport class FifteenPuzzle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            xCord: 600, //x coord for empty tile\n            yCord: 600, //y coord for empty tile\n            size: 200, //size of squares\n            rows: 4, //rows/columns\n            moves: 0, //moves made by user\n            disabled: true, //tracks when clicking should be disabled\n            won: false //tracks if user has won\n        }\n    }\n\n    //sends game data to firebase\n    componentDidMount() {\n        this.props.updateCurrentGame('fifteen');\n    }\n    \n    //function that returns x position of tile\n    getX(tile) {\n        return parseInt(tile.style.left, 10);\n    }\n\n    //function that returns y position of tile\n    getY(tile) {\n        return parseInt(tile.style.top, 10);\n    }\n\n    //function that shuffles the board \n    shuffle() {\n        this.setState({\n            disabled: false,\n            won: false\n        });\n        let squares = document.querySelectorAll(\"#puzzlearea div\");\n        for (let i = 0; i < squares.length; i++) {\n            squares[i].classList.remove(\"solved\");\n        }\n        for (let i = 0; i < 1000; i++) {\n            let neighbors = this.getNeighbors();\n            let randPick = neighbors[(Math.floor(Math.random() * neighbors.length))];\n            if (randPick) {\n                randPick.click();\n            }\n        }\n        this.setState({ moves: 0 }); //reset moves after clicking\n    }\n\n    //function that determines if tile is able to move using x and y position. Returns boolean\n    canMove(x, y) {\n        if ((y === this.state.yCord - this.state.size || y === this.state.yCord + this.state.size)\n            && x === this.state.xCord) {\n            return true;\n        } else if ((x === this.state.xCord - this.state.size || x === this.state.xCord + this.state.size)\n            && y === this.state.yCord) {\n            return true;\n        }\n        return false;\n    }\n\n    //function that returns an array of tiles that are next to the empty square\n    getNeighbors() {\n        let squares = document.querySelectorAll(\"#puzzlearea div\");\n        let result = [];\n        for (let i = 0; i < squares.length; i++) {\n            let x = this.getX(squares[i]);\n            let y = this.getY(squares[i]);\n            if (this.canMove(x, y)) {\n                result.push(squares[i]);\n            }\n        }\n        return result;\n    }\n\n    //function that takes an event e and determines\n    //whether or not to highlight a tile if it's moveable\n    onHover(e) {\n        let x = this.getX(e.target);\n        let y = this.getY(e.target);\n        if (this.canMove(x, y)) {\n            e.target.classList.add(\"highlight\");\n        }\n    }\n\n    //function that handles when a user \"unhovers\" from a tile\n    unHover(tile) {\n        tile.classList.remove(\"highlight\");\n    }\n\n    //function that checks if the game is over and alerts the player if they have won\n    //changes the styling of the background so only the picture appears\n    checkGame() {\n        let squares = document.querySelectorAll(\"#puzzlearea div\");\n        let bool = true;\n        for (let i = 0; i < squares.length; i++) {\n            let correct = squares[i].id.split(\" \");\n            if ((correct[0] !== this.getX(squares[i]).toString()) ||\n                correct[1] !== this.getY(squares[i]).toString()) {\n                bool = false;\n            }\n        }\n        if (bool && !this.state.disabled) {\n            this.props.updateScore(this.state.moves + 1, \"FifteenPuzzle\");\n            this.setState({\n                won: bool,\n                disabled: true\n            });\n            for (let i = 0; i < squares.length; i++) {\n                squares[i].classList.add(\"solved\");\n            }\n        }\n    }\n\n    //function that takes event (e) that handles when a user wants to move\n    //a tile\n    moveTile(e) {\n        //only moveable if game hasn't been won\n        if (!e.target.classList.contains(\"solved\")) { \n            let x = this.getX(e.target);\n            let y = this.getY(e.target);\n            if (this.canMove(x, y)) {\n                e.target.style.left = this.state.xCord + \"px\";\n                e.target.style.top = this.state.yCord + \"px\";\n                this.setState({\n                    xCord: this.state.xCord = x,\n                    yCord: this.state.yCord = y,\n                    moves: this.state.moves + 1\n                })\n                if (!this.state.disabled) {\n                    this.checkGame();\n                }\n            }\n        }\n    }\n\n    //function that generates generates an array of squares and returns that array\n    makeSquares() {\n        let squares = [];\n        for (let i = 0; i < (this.state.rows * this.state.rows - 1); i++) {\n            let x = (i % this.state.rows) * this.state.size;\n            let y = Math.floor(i / this.state.rows) * this.state.size;\n\n            squares.push(\n                <div key={i} id={x + \" \" + y} className=\"square\" onMouseOut={(e) => this.unHover(e.target)}\n                    onMouseOver={(e) => this.onHover(e)} onClick={(e) => this.moveTile(e)}\n                    style={{\n                        backgroundPosition: -x + \"px \" + -y + \"px\",\n                        left: x + \"px\", top: y + \"px\"\n                    }}>\n                    {i + 1}\n                </div>\n            );\n        }\n        return squares;\n    }\n\n    //function that handles event (e) when user changes picture in background of puzzle\n    changePic(e) {\n        let squares = document.querySelectorAll(\"#puzzlearea div\");\n        if (e.target.files && e.target.files[0]) {\n            console.log(e.target.files[0]);\n            var reader = new FileReader();\n            reader.onload = function (e) {\n                for (let i = 0; i < squares.length; i++) {\n                    squares[i].style.backgroundImage = `url(${e.target.result})`\n                }\n            };\n\n            reader.readAsDataURL(e.target.files[0]);\n        }\n    }\n\n    //renders puzzle\n    render() {\n        return (\n            <div className=\"fifteen\">\n                <div id=\"puzzlearea\">{\n                    this.makeSquares()\n                }\n                </div>\n                {this.state.won && <div className=\"won\">{\"YOU WON IN \" + (this.state.disabled && this.state.moves) + \" MOVE(S)!!!\"}</div>}\n                <div className=\"fifteen-buttons\">\n                    <div>\n                        <button className=\"btn btn-warning\" onClick={() => this.shuffle()}>Shuffle</button>\n                    </div>\n                    <div>\n                        <label htmlFor=\"files\" id=\"changePic\" className=\"btn-lg btn-primary\">Change Image</label>\n                        <input id=\"files\" type=\"file\" style={{ visibility: \"hidden\" }} onChange={(e) => this.changePic(e)}></input>\n                    </div>\n                    <div>\n                        <Link className=\"link\" to=\"/comments\">\n                            <button id=\"comment\" className=\"btn btn-primary\"> Leave a comment...</button>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Carousel } from 'react-bootstrap';\nimport slide01 from \"./imgs/slide01.png\";\nimport slide02 from \"./imgs/slide02.png\";\nimport slide03 from \"./imgs/slide03.png\";\nimport snake from \"./imgs/snake.png\";\nimport fifteenpuzzle from \"./imgs/fifteenpuzzle.png\";\nimport reacteroids from \"./imgs/reacteroids.png\";\nimport { Link } from \"react-router-dom\";\n\n//react component that renders the homepage of the application\nexport class Homepage extends Component {\n    render() {\n        return (\n            <div className=\"homepage\">\n                <div className=\"intro\">\n\n                    <ControlledCarousel />\n                </div>\n                <CardList />\n\n            </div>\n        )\n\n    }\n}\n\n//react component that renders a react-bootstrap carousel\nexport class ControlledCarousel extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.handleSelect = this.handleSelect.bind(this);\n\n        this.state = {\n            index: 0,\n            direction: null\n        };\n    }\n\n    handleSelect(selectedIndex, e) {\n        /*alert(`selected=${selectedIndex}, direction=${e.direction}`);*/\n        this.setState({\n            index: selectedIndex,\n            direction: e.direction\n        });\n    }\n\n    render() {\n        const { index, direction } = this.state;\n\n        return (\n            <Carousel\n                activeIndex={index}\n                direction={direction}\n                onSelect={this.handleSelect}\n            >\n                <Carousel.Item>\n                    <img width={1150} height={500} alt=\"900x500\" src={slide01} />\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img width={1150} height={500} alt=\"900x500\" src={slide02} />\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img width={1150} height={500} alt=\"900x500\" src={slide03} />\n                </Carousel.Item>\n            </Carousel>\n        );\n    }\n}\n\n//react component that renders a card with game information in it\nexport class GameCard extends Component {\n    render() {\n        return (\n            <div className=\"col-md-6 col-lg-4 d-flex align-items-stretch\">\n\n                <div className=\"card w-100 text-center mb-4\">\n                    <Link className=\"gameLink\" to={this.props.info.link}>\n                        <img className=\"card-img-top\" src={this.props.info.img} alt=\"Top of card\" />\n                        <div className=\"card-body\">\n                            <h3 className=\"card-title\">{this.props.info.title}</h3>\n                            <p className=\"card-text\">\n                                {this.props.info.text}\n                            </p>\n                        </div>\n                    </Link>\n                    {this.props.link}\n                </div>\n\n            </div>\n        )\n    }\n}\n\n//React component that renders a list of bootstrap cards with game information, pictures, and names\nexport class CardList extends Component {\n    render() {\n        let games = [{ title: \"Reacteroids\", img: reacteroids, text: \"Developed By:\", link: \"/reacteroids\" },\n        { title: \"Snake\", img: snake, text: \"Developed By: Mitchell Francisco\", link: \"/snake\" },\n        { title: \"Fifteen Puzzle\", img: fifteenpuzzle, text: \"Developed By: Blake Franzen\", link: \"/fifteen\" }];\n        return (\n            <div className=\"cardlist row\">\n                {games.map((d, i) => {\n                    if (d.title === \"Reacteroids\") {\n                        return <GameCard key={\"item-\" + i} info={d} link={<a title=\"GitHub repo\" href=\"https://github.com/chriz001/Reacteroids\">chriz001</a>} />\n                    } else {\n                        return <GameCard key={\"item-\" + i} info={d} />\n                    }\n                })}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { SignIn } from './SignIn';\nimport { SignUp } from './SignUp';\nimport { Scores } from './Scores';\nimport { UserAccount } from './UserAccount';\nimport { CommentSection } from './Comment.jsx';\nimport { HashRouter as Router, Route, NavLink, Redirect, Link } from \"react-router-dom\";\nimport './App.css';\nimport firebase from 'firebase';\nimport { SnakeGame } from './Games/SnakeGame/SnakeGame.js';\nimport { Reacteroids } from './Games/Reacteroids-master/src/Reacteroids.js';\nimport { FifteenPuzzle } from './Games/FifteenPuzzle/Fifteen.js';\nimport { Homepage } from './Homepage';\nimport { Helmet } from \"react-helmet\";\n\n//react component that handles application, renders necessary content\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSignIn = this.handleSignIn.bind(this);\n        this.handleSignUp = this.handleSignUp.bind(this);\n        this.handleSignOut = this.handleSignOut.bind(this);\n\n        this.state = {\n            isLoggedIn: false,\n            currentGame: ''\n        };\n    }\n\n\n    componentDidMount() {\n        // Use the firebase onAuthstateChanged method to watch for changes in authentication\n        this.stopWatchingAuth = firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.setState({\n                    user: user,\n                    errorMessage: '',\n                    email: '',\n                    password: '',\n                    username: '',\n                    isLoggedIn: true\n                })\n            } else { // User is signing out\n                this.setState({\n                    user: null\n                })\n            }\n        })\n    }\n\n    // Handle changes to any input element\n    handleChange(event) {\n        let val = event.target.value;\n        let field = event.target.name;\n        let change = {};\n        change[field] = val;\n        this.setState(change);\n    }\n\n    // Sign up with firebase authentication\n    handleSignUp(email, pw, username) {\n        firebase.auth().createUserWithEmailAndPassword(email, pw).then(user => {\n            return user.updateProfile({\n                displayName: username\n            })\n        }).then(user => {\n            this.setState({ user: firebase.auth().currentUser })\n        }).catch(e => {\n            this.setState({ errorMessage: e.message })\n        });\n    }\n\n    // Sign in with firebase authentication\n    handleSignIn(email, pw) {\n        firebase.auth().signInWithEmailAndPassword(email, pw).then(() => {\n            this.setState({ isLoggedIn: true });\n        }).catch(e => {\n            this.setState({ errorMessage: e.message })\n        })\n    }\n\n    // Sign out with firebase authentication\n    handleSignOut() {\n        this.setState({ errorMessage: null, isLoggedIn: false, currentGame: '', user: '' });\n        firebase.auth().signOut()\n\n    }\n\n    // Update the score in the firebase database with the name and the score value\n    updateScore(score, gameName) {\n        if (this.state.user) {\n            this.setState({ score: score });\n            let entry = {};\n            entry['name'] = this.state.user.displayName;\n            entry['score'] = score;\n            let ref = firebase.database().ref(gameName + 'Scores');\n            let allRef = firebase.database().ref('AllScores');\n            ref.push(entry);\n            entry['gameName'] = gameName;\n            allRef.push(entry);\n        }\n    }\n\n    // Intended as a prop for components to know when a user is logged out\n    isLoggedOut() {\n        this.setState({ isLoggedIn: false });\n    }\n\n    // Intended as a prop for components to keep track of the current game being played\n    updateCurrentGame(game) {\n        this.setState({ currentGame: game });\n    }\n\n    render() {\n        let accountStyles = {};\n        if (this.state.user && this.state.user.photoURL) {\n            accountStyles[\"paddingTop\"] = 0;\n            accountStyles[\"paddingBottom\"] = 0;\n        }\n        return (\n            <div className=\"container\">\n                <Helmet>\n                    <style>{\n                        'body { background-image: url(https://preview.ibb.co/jpheYS/background.png); background-repeat: no-repeat; background-size: cover}'\n                    }</style>\n                </Helmet>\n                <Router>\n                    <div className=\"sub-container\">\n                        <nav>\n                            <li><NavLink className=\"title\" to=\"/home\" activeStyle={{ textDecoration: \"none\" }}><h2>Arcode</h2></NavLink></li>\n                           <ul>\n                                <li className=\"signout-btn float-right\">\n                                    {\n                                        this.state.isLoggedIn && this.state.user &&\n                                        <Link className=\"signout2\" to=\"/signin\">\n                                            <button className=\"signout-btn btn-lg btn-warning\" onClick={() => this.handleSignOut()}>\n                                                Sign Out\n                                        </button>\n                                        </Link>\n                                    }\n                                </li>\n                                <li className=\"acc-btn link float-right mr-4\">\n                                    {\n                                        this.state.isLoggedIn && this.state.user &&\n                                        <NavLink style={accountStyles} to=\"/acc\" activeStyle={{ color: '#e14658', textDecoration: \"none\"}}>\n                                            {this.state.user.photoURL &&\n                                                <img className=\"profile-pic\" src={this.state.user.photoURL} alt=\"profile pic\" />\n                                            }\n                                            {this.state.user.displayName}\n                                        </NavLink>\n                                    }\n                                </li>\n                                <li className=\"link \"><NavLink to=\"/scores\" activeStyle={{ color: '#e14658', textDecoration: \"none\"}}>Scores</NavLink></li>\n                            </ul>\n                        </nav>\n                        <Route path=\"/home\" component={Homepage} />\n                        <Route path=\"/acc\" render={(routerProps) => (\n                            this.state.isLoggedIn ? (\n                                <UserAccount {...routerProps} signoff={() => this.handleSignOut()} isLoggedOut={() => this.isLoggedOut()} />\n                            ) : (\n                                    <Redirect to=\"/signin\" />\n                                )\n                        )} />\n                        <Route path=\"/reacteroids\" render={(routerProps) => (\n                            this.state.isLoggedIn ? (\n                                <Reacteroids updateCurrentGame={(e) => this.updateCurrentGame(e)} updateScore={(score, gameName) => this.updateScore(score, gameName)} />\n                            ) : (\n                                    <Redirect to=\"/signin\" />\n                                )\n                        )} />\n                        <Route path=\"/fifteen\" render={(routerProps) => (\n                            this.state.isLoggedIn ? (\n                                <FifteenPuzzle updateCurrentGame={(e) => this.updateCurrentGame(e)} updateScore={(score, gameName) => this.updateScore(score, gameName)} />\n                            ) : (\n                                    <Redirect to=\"/signin\" />\n                                )\n                        )} />\n                        <Route path=\"/snake\" render={(routerProps) => (\n                            this.state.isLoggedIn && this.state.user ? (\n                                <SnakeGame {...routerProps} updateCurrentGame={(e) => this.updateCurrentGame(e)} updateScore={(score, gameName) => this.updateScore(score, gameName)} />\n                            ) : (\n                                    <Redirect to=\"/signin\" />\n                                )\n                        )} />\n                        <Route path=\"/signup\" render={(routerProps) => (\n                            this.state.isLoggedIn ? (\n                                <Redirect to=\"/home\" />\n                            ) : (\n                                    <SignUp {...routerProps} handleSignUp={this.handleSignUp} />\n                                )\n                        )} />\n                        <Route path=\"/scores\" render={(routerProps) => (\n                            this.state.isLoggedIn ? (\n                                <Scores {...routerProps} />\n                            ) : (\n                                    <Redirect to=\"/signin\" />\n                                )\n                        )} />\n                        <Route path=\"/comments\" render={(routerProps) => (\n                            this.state.isLoggedIn ? (\n                                <CommentSection game={this.state.currentGame} />\n                            ) : (\n                                    <Redirect to=\"/signin\" />\n                                )\n                        )} />\n                        <Route path=\"/signin\" render={(routerProps) => (\n                            this.state.isLoggedIn ? (\n                                <Redirect to=\"/home\" />\n                            ) : (\n                                    <SignIn {...routerProps} handleSignIn={this.handleSignIn} handleSignUp={this.handleSignUp} />\n                                )\n                        )} />\n                        <Route exact path=\"/\" render={(routerProps) => (\n                            this.state.isLoggedIn ? (\n                                <Redirect to=\"/home\" />\n                            ) : (\n                                    <Redirect to=\"/signin\" />\n                                )\n                        )} />\n                    </div>\n                </Router>\n                {this.state.errorMessage &&\n                    <p>{this.state.errorMessage}</p>\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport firebase from 'firebase/app';\n//import 'bootstrap/dist/css/bootstrap.css';\nimport registerServiceWorker from './registerServiceWorker';\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyAi2Rh-cKQAF5YFVpme7jJ6isx3ff1n60s\",\n    authDomain: \"p4-francmit.firebaseapp.com\",\n    databaseURL: \"https://p4-francmit.firebaseio.com\",\n    projectId: \"p4-francmit\",\n    storageBucket: \"\",\n    messagingSenderId: \"945824936844\"\n};\nfirebase.initializeApp(config);\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}